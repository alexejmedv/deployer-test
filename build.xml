<?xml version="1.0" encoding="UTF-8"?>
<project name="testing deployer" default="my-build">

 <!-- Tools are located as PHARs in ${basedir}/build/tools-->

 <property name="phpcs"                         value="${basedir}/build/tools/phpcs.phar"/>
 <property name="github_changelog_generator"    value="${basedir}/build/tools/github_changelog_generator"/>
 <property name="deployer"                      value="${basedir}/build/tools/deployer.phar"/>



<!-- ################################################################# MyBuild ################################################################# -->


 <target name="my-build"
         depends="clean,lint,phpcs-ci,github_changelog_generator,deployer"
         description="Performs small static code analysis" />


 <!-- ################################################################# Clean ################################################################# 


 <target name="clean"
         unless="clean.done"
         description="Cleanup build artifacts">
  <delete dir="${basedir}/build/api"/>
  <delete dir="${basedir}/build/coverage"/>
  <delete dir="${basedir}/build/logs"/>
  <delete dir="${basedir}/build/pdepend"/>
  <delete dir="${basedir}/build/phpdox"/>
  <property name="clean.done" value="true"/>
 </target>


 ################################################################# Prepare ################################################################# 


 <target name="prepare"
         unless="prepare.done"
         depends="clean"
         description="Prepare for build">
  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <mkdir dir="${basedir}/build/pdepend"/>
  <mkdir dir="${basedir}/build/phpdox"/>
  <property name="prepare.done" value="true"/>
 </target>


################################################################# Lint ################################################################# -->


 <target name="lint"
         unless="lint.done"
         description="Perform syntax check of sourcecode files">
  <apply executable="php" taskname="lint">
   <arg value="-l" />

   <fileset dir="${basedir}/src">
    <include name="**/*.php" />
    <modified />
   </fileset>
  </apply>

  <property name="lint.done" value="true"/>
 </target>

 <!-- ################################################################# CodeSniffer ################################################################# -->


 <target name="phpcs"
         unless="phpcs.done"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="${phpcs}" taskname="phpcs">
   <arg value="--standard=PSR1" />
   <arg value="--standard=PSR2" />
   <arg value="--extensions=php" />
   <arg value="--ignore=autoload.php" />
   <arg path="${basedir}/src" />
   <arg path="${basedir}/tests" />
  </exec>

  <property name="phpcs.done" value="true"/>
 </target>

 <target name="phpcs-ci"
         unless="phpcs.done"
         depends="prepare"
         description="Find coding standard violations using PHP_CodeSniffer and log result in XML format. Intended for usage within a continuous integration environment.">
  <exec executable="${phpcs}" output="/dev/null" taskname="phpcs">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
   <arg value="--standard=PSR1,PSR2,Zend,Squiz,Generic" />
   <arg value="--extensions=php" />
   <arg value="--ignore=autoload.php" />
   <arg path="${basedir}/src" />
   <arg path="${basedir}/tests" />
  </exec>

  <property name="phpcs.done" value="true"/>
 </target>

 <!-- ############################################################## ChangelogGenerator ############################################################## -->


 <target name="github_changelog_generator"
         unless="github_changelog_generator.done"
         description="Fully automated changelog generation - This gem generates a changelog file based on tags, issues and merged pull requests">
  <exec executable="${github_changelog_generator}" taskname="github_changelog_generator">
  </exec>

  <property name="github_changelog_generator.done" value="true"/>
 </target>

  <!-- ############################################################## Deployer ############################################################## -->


 <target name="deployer"
         unless="deployer.done"
         description="Deploy using Deployer">
  <exec executable="${deployer}" taskname="deployer">
   <arg value="deploy" />
   <arg value="-vvv" />   
  </exec>

  <property name="deployer.done" value="true"/>
 </target>
</project>